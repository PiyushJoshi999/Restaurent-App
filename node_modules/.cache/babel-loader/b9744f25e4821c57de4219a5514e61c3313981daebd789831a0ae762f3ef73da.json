{"ast":null,"code":"var _jsxFileName = \"/home/piyush/restaurant-app/src/Components/NewProduct.js\",\n  _s = $RefreshSig$();\n// import React, {useState, Fragment} from 'react';\n\n// import ProductForm from './ProductForm';\n// import ProductItem from './ProductItem';\n\n// const NewProduct = () => {\n\n//     const [addedProducts, setAddedProducts] = useState([]);\n\n//     const addProductHandler = (newProduct) => {\n//         setAddedProducts((prevProducts) => [...prevProducts, newProduct]);\n//       };\n\n// return (\n//     <Fragment>\n//          <ProductForm onAddProduct={addProductHandler} />\n//          <h2>Available Products:</h2>\n//          {addedProducts.map((product, index) => (\n//         <ProductItem key={index}\n//          productData={product}\n//          onDeleteProduct={handleDeleteProduct}\n//          />\n//       ))}\n//     </Fragment>\n\n// );\n\n// }\n\n// export default NewProduct;\n\n// import React, { useState, Fragment } from 'react';\n// import ProductForm from './ProductForm';\n// import ProductItem from './ProductItem';\n\n// const NewProduct = () => {\n//   const [addedProducts, setAddedProducts] = useState([]);\n\n//   const handleAddProduct = (productData) => {\n//     setAddedProducts((prevProducts) => [...prevProducts, productData]);\n//     localStorage.setItem('products', JSON.stringify(addedProducts));\n//   };\n\n//   const handleDeleteProduct = (productId) => {\n//     const updatedProducts = addedProducts.filter(\n//       (product) => product.id !== productId\n//     );\n//     setAddedProducts(updatedProducts);\n//     localStorage.setItem('products', JSON.stringify(updatedProducts));\n//   };\n\n//   return (\n//     <Fragment>\n//       <ProductForm onAddProduct={handleAddProduct} />\n//       <h2>Available Products:</h2>\n//       {addedProducts.map((product) => (\n//         <ProductItem\n//           key={product.id}\n//           productData={product}\n//           onDeleteProduct={handleDeleteProduct}\n//         />\n//       ))}\n//     </Fragment>\n//   );\n// };\n\n// export default NewProduct;\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport ProductForm from './ProductForm';\nimport ProductItem from './ProductItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewProduct = () => {\n  _s();\n  const [addedProducts, setAddedProducts] = useState([]);\n  const [totalValue, setTotalValue] = useState(0);\n  useEffect(() => {\n    const storedProducts = localStorage.getItem('products');\n    if (storedProducts) {\n      setAddedProducts(JSON.parse(storedProducts));\n    }\n  }, []);\n  useEffect(() => {\n    updateTotalValue();\n  }, [addedProducts]);\n  const updateTotalValue = () => {\n    let sum = 0;\n    addedProducts.forEach(product => {\n      sum += parseInt(product.sellingPrice);\n    });\n    setTotalValue(sum);\n  };\n  const handleAddProduct = productData => {\n    setAddedProducts(prevProducts => [...prevProducts, productData]);\n  };\n  const handleDeleteProduct = productId => {\n    const updatedProducts = addedProducts.filter(product => product.id !== productId);\n    setAddedProducts(updatedProducts);\n  };\n  useEffect(() => {\n    localStorage.setItem('products', JSON.stringify(addedProducts));\n  }, [addedProducts]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProductForm, {\n      onAddProduct: handleAddProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total value worth of products is __Rs. \", totalValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Products:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), addedProducts.map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n      productData: product,\n      onDeleteProduct: handleDeleteProduct\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(NewProduct, \"NjpD/ExiZRrYedkR4evYs2Ln2fc=\");\n_c = NewProduct;\nexport default NewProduct;\nvar _c;\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","ProductForm","ProductItem","jsxDEV","_jsxDEV","NewProduct","_s","addedProducts","setAddedProducts","totalValue","setTotalValue","storedProducts","localStorage","getItem","JSON","parse","updateTotalValue","sum","forEach","product","parseInt","sellingPrice","handleAddProduct","productData","prevProducts","handleDeleteProduct","productId","updatedProducts","filter","id","setItem","stringify","children","onAddProduct","fileName","_jsxFileName","lineNumber","columnNumber","map","onDeleteProduct","_c","$RefreshReg$"],"sources":["/home/piyush/restaurant-app/src/Components/NewProduct.js"],"sourcesContent":["// import React, {useState, Fragment} from 'react';\n\n// import ProductForm from './ProductForm';\n// import ProductItem from './ProductItem';\n\n// const NewProduct = () => {\n\n//     const [addedProducts, setAddedProducts] = useState([]);\n\n//     const addProductHandler = (newProduct) => {\n//         setAddedProducts((prevProducts) => [...prevProducts, newProduct]);\n//       };\n\n// return (\n//     <Fragment>\n//          <ProductForm onAddProduct={addProductHandler} />\n//          <h2>Available Products:</h2>\n//          {addedProducts.map((product, index) => (\n//         <ProductItem key={index}\n//          productData={product}\n//          onDeleteProduct={handleDeleteProduct}\n//          />\n//       ))}\n//     </Fragment>\n   \n// );\n\n// }\n\n// export default NewProduct;\n\n// import React, { useState, Fragment } from 'react';\n// import ProductForm from './ProductForm';\n// import ProductItem from './ProductItem';\n\n// const NewProduct = () => {\n//   const [addedProducts, setAddedProducts] = useState([]);\n\n//   const handleAddProduct = (productData) => {\n//     setAddedProducts((prevProducts) => [...prevProducts, productData]);\n//     localStorage.setItem('products', JSON.stringify(addedProducts));\n//   };\n\n//   const handleDeleteProduct = (productId) => {\n//     const updatedProducts = addedProducts.filter(\n//       (product) => product.id !== productId\n//     );\n//     setAddedProducts(updatedProducts);\n//     localStorage.setItem('products', JSON.stringify(updatedProducts));\n//   };\n\n//   return (\n//     <Fragment>\n//       <ProductForm onAddProduct={handleAddProduct} />\n//       <h2>Available Products:</h2>\n//       {addedProducts.map((product) => (\n//         <ProductItem\n//           key={product.id}\n//           productData={product}\n//           onDeleteProduct={handleDeleteProduct}\n//         />\n//       ))}\n//     </Fragment>\n//   );\n// };\n\n// export default NewProduct;\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport ProductForm from './ProductForm';\nimport ProductItem from './ProductItem';\n\nconst NewProduct = () => {\n  const [addedProducts, setAddedProducts] = useState([]);\n  const [totalValue, setTotalValue] = useState(0);\n\n  useEffect(() => {\n    const storedProducts = localStorage.getItem('products');\n    if (storedProducts) {\n      setAddedProducts(JSON.parse(storedProducts));\n    }\n  }, []);\n\n  useEffect(() => {\n    updateTotalValue();\n  }, [addedProducts]);\n\n  const updateTotalValue = () => {\n    let sum = 0;\n    addedProducts.forEach((product) => {\n      sum += parseInt(product.sellingPrice);\n    });\n    setTotalValue(sum);\n  };\n\n  const handleAddProduct = (productData) => {\n    setAddedProducts((prevProducts) => [...prevProducts, productData]);\n  };\n\n  const handleDeleteProduct = (productId) => {\n    const updatedProducts = addedProducts.filter(\n      (product) => product.id !== productId\n    );\n    setAddedProducts(updatedProducts);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('products', JSON.stringify(addedProducts));\n  }, [addedProducts]);\n\n  return (\n    <Fragment>\n      <ProductForm onAddProduct={handleAddProduct} />\n      <div>\n        Total value worth of products is __Rs. {totalValue}\n      </div>\n      <div>\n        <h2>Available Products:</h2>\n      </div>\n      {addedProducts.map((product) => (\n        <ProductItem\n          key={product.id}\n          productData={product}\n          onDeleteProduct={handleDeleteProduct}\n        />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default NewProduct;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}